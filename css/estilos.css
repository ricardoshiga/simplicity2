/* Estilos CSS */
/* #715DC7     FBE8CD Titulos + Textos: Inter */

@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&family=Roboto:wght@400;700;900&display=swap');

* {
    box-sizing: border-box;
}

/* Declarando o font-size para o elemento raiz (html).

IMPORTANTE: Esta configuração permitirá o uso da medida REM em vários lugares no CSS.*/

/* Exemplo: 1rem equivale (no momento) a 14px */
html {
    font-size: 14px;
}


body {
    background-color: rgb(245, 241, 241);
    font-family: 'Noto Sans', Tahoma, sans-serif;
    /* Parte 1 */
    display: flex;
    min-height: 100vh;
    flex-direction: column;
}



     /* Parte 2 
     Usamos "Flex 1" para garantir que a main ocupará todo o espaço disponível no body (que, já segue o tamanho da viewport). 
     Na prática, isso irá empurrar o rodapé sempre para baixo.*/

     /* Sticky Footer */
main { flex: 1; }


/* CSS Reset   */
/* RESET é uma técnica de limpeza */
/* * { margin: 0; padding: 0;} */

body,
h1,
h2,
p,
figure,
.menu {
    margin: 0;
    padding: 0;
}

h1 {
    font-family: Roboto, sans-serif;
    text-transform: uppercase;
    font-weight: 800;
    font-size: 1.5rem;
}

h1 a {
    background-color: #938fa1;
    color: rgb(0, 0, 0);
    border-radius: 5px;
    padding: 0.3rem 1rem;
}

a {
    text-decoration: none;
}

header {
    /* Deixar o cabeçalho fixo no topoda página */
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: aliceblue;
}

/* Ativando flex somente para o limitaor que está dentro do limitador */
header .limitador {
    display: flex;
    justify-content: space-between;
    align-items: center;

    /* VH - Viewport Height   
    Usando esta medida garantimos que a relação de tamanho é a tela. Neste caso, cerca de 12 unidades da altura da tela.*/

    height: 12vh;
    margin: auto;
}


nav h2 a {
    color: black;
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;
}

nav h2 a:hover,
nav h2 a:focus,
.menu a:hover,
.menu a:focus {
    background-color: rgb(184, 184, 189);

}

.menu {
    list-style: none;
    display: none;
}

.menu a {
    color: black;
    font-weight: bold;
    display: flex;
    height: 50px;
    justify-content: center;
    align-items: center;
}

/* *****ATENÇÂO***** */

/* Esta regra abaixo somente irá funcionar com o auxílio de programação JS  */

/* Objetivo dessa regra: quando duas classes estiverem combinadas (menu e aberto), o menu será exibido completamente. */

.menu.aberto {
    display: flex;
    flex-direction: column;
    background-color: white;

    position: absolute;
    right: 0;
    left: 0;

}

.destaque {
    background-image: url(../imagens/fundo-destaque.jpg);
    height: 88vh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    background-size: cover;
    background-attachment: fixed;
}

.destaque h2,
.destaque p {
    color: white;
    text-align: center;
}

.destaque h2 {
    /* Fonte Responsiva usando função: CLAMP */
    /* CLAMP (tamanho mínimo, tamanho ideal, tamanho máximo) */
    font-size: clamp(3rem, 10vw, 7rem);


    /* Etapa 2 - chamar e configurar a execução da animação  */
    animation-name: aparecer;
    animation-duration: 3s;

    /* animation-iteration-count: infinite;
    animation-direction: alternate; */
    font-weight: 800;
}

.destaque p {
    font-size: clamp(1.5rem, 3vw, 3rem);

    animation-name: aparecer;
    animation-duration: 3s;
    animation-delay: 2s;
    /* Usamos a propriedade/valor abaixo para forçar a animação a iniciar (após 2s) já com a opacidade zerada, o tamanho menor e posição diferente */
    animation-fill-mode: backwards;
}

/* Animação */
/* Etapa 1 - criar uma regra de animação */
@keyframes aparecer {
    from {
        opacity: 0;
        transform: translateY(-300px) scale(0.1);

    }

    to {
        opacity: 1;
        /* transform: translateY(100px) ;} */
    }

}

/* Tornando as imagens responsivas/flexíveis */

img {
    max-width: 100%;
}

article h2 {
    padding: 1rem;
    font-size: 2rem;
    font-family: "Roboto";
    color: #d8b3b3;
}

article p,
article address {
    padding: 0.5rem 0;
    font-size: 1.3rem;
}

article address {
    /* font-style: normal; */
}

/* Alinhamento dos articles SOMENTE que tenham as classes indicadas */
.front-end,
.historia,
.localizacao {
    text-align: center;
}

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
    background-size: cover;
}

span {
    color: white;
    text-shadow: 2px 0 rgb(189, 174, 158);
}

.historia iframe {
    width: 100%;
    max-width: 700px;
    margin-bottom: 2rem;
}

.localizacao iframe {
    width: 100%;
    margin-top: 2rem;
}

.front-end figure {
    margin: 2rem auto;
}

.limitador {
    width: 95vw;
    margin: auto;
}

footer {
    background-color: rgb(126, 112, 112);
    text-align: center;
    height: 7vh;

}

/* Regras para páginas "Produtos, Serviços, Contato" */
.conteudo {
    background-color: #fbfbfb;
    padding: 0.5rem;
    border-radius: 8px;
}

.conteudo h2 {
    padding-left: 0;
    text-align: center;

}

table,
th,
td {
    border: solid 2px black;
    border-collapse: collapse;
}

table {
    width: 80%;
    margin: auto;
    max-width: 600px;
}

caption {
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.2rem;
    padding-bottom: 0, 5rem;
}

th {
    background-color: #0d0000;
    color: #fffffa;
    padding: 0.7rem;
    font-size: 1.1rem;
    width: 33, 33%;

}

td {
    padding: 2%;
    font-size: 1.1rem;
}

/* Pseudo-classes de seleção */
td:last-child {
    text-align: right;
}

td:first-child {
    text-transform: uppercase;
}

td:nth-child(2) {
    text-align: center;
}

/* Pseudo-elementos
Obd: Sempre iniciam com duplo :: */

td:last-child::before {
    content: "R$ ";
}

/* Pseudo-elemento ::first-letter
.conteudo p::first-letter {
    font-weight: bold;
    font-size: 1.2rem; */



tr:nth-child(odd) {
    background-color: #d3d3ca;
}

tr:nth-child(even) {
    background-color: #b9b979;
}



.conteudo figure {
    margin: 2rem;
    text-align: center;
}

.conteudo figure img {
    border-radius: 50%;
    box-shadow: 0px 0px 20px #0d0000;
    margin: 0.6rem;
    transition: 0.2s;
    filter: grayscale(100%);
}


.conteudo figure img:hover {
    scale: 1.1;
    filter: grayscale(0);
}

form {
    width: 95%;
    margin: auto;
    padding: 1rem;
    background-color: #938fa1;
    border-radius: 8px;

}

/* Pseudo-classe chamada: NOT */
input:not([type=radio]):not([type=checkbox]),
select,
textarea {
    border: none;
    padding: 1%;
    width: 100%;
    box-shadow: #0d0000 0 0 4px;
    height: 20px;
}

textarea {
    height: auto;
}

label {
    font-size: 1.3rem;
}

form div {
    margin-top: 1rem
}

button {
    border: none;
    background-color: #535252;
    color: white;
    padding: 1rem;
    font-weight: bold;
    border-radius: 8%;

}

/* HOVER: mouse / FOCUS: teclado */
button:hover,
button:focus {
    background-color: #a19e9e;
    cursor: pointer;
}

@media screen and (min-width: 530px) {
    nav h2 {
        display: none;
    }


    .menu {
        display: flex;
    }

    .menu li {
        width: 100%;
    }


    nav {
        width: 70%;
    }

    .front-end figure img {
        height: 150px;
    }
}

@media screen and (min-width: 800px) {
    html {
        font-size: 18px;
    }
}

.limitdor {
    max-width: 1100px;
}